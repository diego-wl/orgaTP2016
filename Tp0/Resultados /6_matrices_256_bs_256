==10078== Cachegrind, a cache and branch-prediction profiler
==10078== Copyright (C) 2002-2013, and GNU GPL'd, by Nicholas Nethercote et al.
==10078== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==10078== Command: ./Tp2
==10078== 
--10078-- warning: L3 cache found, using its data for the LL simulation.
==10078== 
==10078== I   refs:      6,378,904,876
==10078== I1  misses:        2,930,143
==10078== LLi misses:            1,352
==10078== I1  miss rate:          0.04%
==10078== LLi miss rate:          0.00%
==10078== 
==10078== D   refs:      3,253,052,364  (2,544,030,674 rd   + 709,021,690 wr)
==10078== D1  misses:      101,425,160  (  101,187,522 rd   +     237,638 wr)
==10078== LLd misses:           27,169  (        8,112 rd   +      19,057 wr)
==10078== D1  miss rate:           3.1% (          3.9%     +         0.0%  )
==10078== LLd miss rate:           0.0% (          0.0%     +         0.0%  )
==10078== 
==10078== LL refs:         104,355,303  (  104,117,665 rd   +     237,638 wr)
==10078== LL misses:            28,521  (        9,464 rd   +      19,057 wr)
==10078== LL miss rate:            0.0% (          0.0%     +         0.0%  )








--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 4-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         3145728 B, 64 B, 12-way associative
Command:          ./Tp2
Data file:        cachegrind.out.10078
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
           Ir      I1mr  ILmr            Dr        D1mr  DLmr          Dw    D1mw   DLmw 
--------------------------------------------------------------------------------
6,378,904,876 2,930,143 1,352 2,544,030,674 101,187,522 8,112 709,021,690 237,638 19,057  PROGRAM TOTALS


           42    7    1           0           0     0          36       5      0  void matrix_multiply(matrix_t* m1, matrix_t* m2, matrix_t* mr, int bs) {
            .    .    .           .           .     .           .       .      .  	size_t n, en, i, j, k, kk, jj;
            .    .    .           .           .     .           .       .      .  	double sum;
            .    .    .           .           .     .           .       .      .  	double m1e, m2e;
            .    .    .           .           .     .           .       .      .  
           18    0    0          12           6     0           6       0      0  	n = m1->rows;
           54    0    0          18           0     0           6       0      0  	en = bs*(n/bs);
            .    .    .           .           .     .           .       .      .  
           66    2    2          36           0     0           6       0      0  	for(kk=0; kk<en; kk+=bs)
           66    0    0          36           0     0           6       0      0  		for(jj=0; jj<en; jj+=bs)
        6,174    0    0       4,620           0     0           6       0      0  			for(i=0; i<n; i++)
    2,766,336    1    1   1,579,008           0     0       1,536       0      0  				for(j=jj; j<jj+bs; j++) {
    5,111,808    6    1   2,359,296      24,576 6,081     393,216       0      0  					sum = mr->array[i*n+j];
  708,182,016    1    1 404,226,048           0     0     393,216       0      0  					for(k=kk; k<kk+bs; k++) {
1,308,622,848    6    1 603,979,776     458,483     0 100,663,296       0      0  						m1e = m1->array[i*n+k];
1,308,622,848    0    0 603,979,776 100,655,101     0 100,663,296       0      0  						m2e = m2->array[k*n+j];
  503,316,480    0    0 301,989,888           0     0 100,663,296       0      0  						sum += m1e * m2e;
            .    .    .           .           .     .           .       .      .  					}
    4,718,592    0    0   2,359,296      20,480     0     393,216 147,436      0  					mr->array[i*n+j] = sum;
            .    .    .           .           .     .           .       .      .  				}
           18    0    0          18           0     0           0       0      0  }
