fin linea  - linea 6 - seconds 1466541441 ; nanoseconds 7073975 

==3977== Cachegrind, a cache and branch-prediction profiler
==3977== Copyright (C) 2002-2013, and GNU GPL'd, by Nicholas Nethercote et al.
==3977== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==3977== Command: ./Tp2
==3977== 
--3977-- warning: L3 cache found, using its data for the LL simulation.
==3977== 
==3977== I   refs:      9,024,278,668
==3977== I1  misses:        8,202,151
==3977== LLi misses:            1,354
==3977== I1  miss rate:          0.09%
==3977== LLi miss rate:          0.00%
==3977== 
==3977== D   refs:      4,667,844,690  (3,697,040,303 rd   + 970,804,387 wr)
==3977== D1  misses:        2,415,083  (    2,307,474 rd   +     107,609 wr)
==3977== LLd misses:           33,697  (       10,287 rd   +      23,410 wr)
==3977== D1  miss rate:           0.0% (          0.0%     +         0.0%  )
==3977== LLd miss rate:           0.0% (          0.0%     +         0.0%  )
==3977== 
==3977== LL refs:          10,617,234  (   10,509,625 rd   +     107,609 wr)
==3977== LL misses:            35,051  (       11,641 rd   +      23,410 wr)
==3977== LL miss rate:            0.0% (          0.0%     +         0.0%  )


--------------------------------------------------------------------------------
I1 cache:         32768 B, 64 B, 4-way associative
D1 cache:         32768 B, 64 B, 8-way associative
LL cache:         3145728 B, 64 B, 12-way associative
Command:          ./Tp2
Data file:        cachegrind.out.3977
Events recorded:  Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Events shown:     Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Event sort order: Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw
Thresholds:       0.1 100 100 100 100 100 100 100 100
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
           Ir      I1mr  ILmr            Dr      D1mr   DLmr          Dw    D1mw   DLmw 
--------------------------------------------------------------------------------
9,024,278,668 8,202,151 1,354 3,697,040,303 2,307,474 10,287 970,804,387 107,609 23,410  PROGRAM TOTALS


           42       7    1           0         0     0          36      5      0  void matrix_multiply(matrix_t* m1, matrix_t* m2, matrix_t* mr, int bs) {
            .       .    .           .         .     .           .      .      .  	size_t n, en, i, j, k, kk, jj;
            .       .    .           .         .     .           .      .      .  	double sum;
            .       .    .           .         .     .           .      .      .  	double m1e, m2e;
            .       .    .           .         .     .           .      .      .  
           18       0    0          12         6     0           6      0      0  	n = m1->rows;
           54       0    0          18         0     0           6      0      0  	en = bs*(n/bs);
            .       .    .           .         .     .           .      .      .  
          678       2    2         444         0     0           6      0      0  	for(kk=0; kk<en; kk+=bs)
       12,204       0    0       7,992         0     0         108      0      0  		for(jj=0; jj<en; jj+=bs)
    2,249,208       0    0   1,683,504         0     0       1,944      0      0  			for(i=0; i<n; i++)
   67,744,512       1    1  38,071,296         0     0     559,872      0      0  				for(j=jj; j<jj+bs; j++) {
  116,453,376       6    1  53,747,712 1,119,637 8,257   8,957,952      0      0  					sum = mr->array[i*n+j];
1,083,912,192       1    1 609,140,736         0     0   8,957,952      0      0  					for(k=kk; k<kk+bs; k++) {
1,863,254,016       6    1 859,963,392 1,119,655     0 143,327,232      0      0  						m1e = m1->array[i*n+k];
1,863,254,016       0    0 859,963,392    32,730     0 143,327,232      0      0  						m2e = m2->array[k*n+j];
  716,636,160       0    0 429,981,696         0     0 143,327,232      0      0  						sum += m1e * m2e;
            .       .    .           .         .     .           .      .      .  					}
  107,495,424       0    0  53,747,712         0     0   8,957,952      0      0  					mr->array[i*n+j] = sum;
            .       .    .           .         .     .           .      .      .  				}
           18       0    0          18         6     0           0      0      0  }
